{"version":3,"sources":["services/api.js","services/LocalStorageCart.js","images/ShoppingCart.svg","components/BtnAddToCart.js","components/SearchResults.js","components/CartIcon.js","pages/Home.js","components/EndPurchaseButton.js","pages/Cart.js","components/Evaluation.js","services/SaveInLocalStorage.js","components/RatingProduct.js","pages/ProductDetails.js","pages/FinalPage.js","App.js","serviceWorker.js","index.js"],"names":["getCategories","a","fetch","categories","json","categoriesJson","getProductsFromCategoryAndQuery","categoryId","query","Error","fetchQueryCategory","queryCategoryJson","getDetailsFromProductId","productId","productInfo","productInfoJson","getCartItems","JSON","parse","localStorage","getItem","saveCartItem","itemObj","atualCart","some","item","id","addCountItem","find","available_quantity","count","setItem","stringify","final","removeCartItem","removeAll","itemCart","newCart","filter","_circle","_circle2","_path","BtnAddToCart","onBtnClick","props","this","getCart","dataTestID","type","data-testid","value","onClick","Component","SearchResults","fetchApi","category","response","setState","results","state","empty","quantity","updateCart","map","key","to","src","thumbnail","alt","title","price","shipping","free_shipping","itemsCart","_excluded","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","createElement","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","ref","cx","cy","r","d","ForwardRef","forwardRef","CartIcon","width","Home","cartQuantity","reduce","acc","curr","cartIsempty","getAllCategories","allCategories","didRequest","onSearchChange","search","handleChangeCategory","selectedCategory","htmlFor","onChange","name","EndPurchaseButton","Cart","cart","cartItems","verifyQuantity","available","disabled","Evaluation","email","checkedRadioButton","comment","entries","saveInLocalStorage","getFromLocalStorage","RatingProduct","1","2","3","4","5","commentsArray","ratingButtonClick","event","preventDefault","newCheckedRadioButton","obj","selectRadioButton","componentDidMount","getItems","placeholder","number","checked","ProductDetails","match","params","FinalPage","App","basename","process","exact","path","component","React","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gUAAO,SAAeA,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACoBC,MAAM,qDAD1B,cACCC,EADD,gBAEwBA,EAAWC,OAFnC,cAECC,EAFD,yBAGEA,GAHF,4C,sBAKA,SAAeC,EAAtB,oC,4CAAO,WAA+CC,EAAYC,GAA3D,iBAAAP,EAAA,yDACAM,GAAeC,EADf,sBAEG,IAAIC,MAAM,iCAFb,uBAI4BP,MAAM,0DAAD,OAA2DK,EAA3D,cAA2EC,IAJ5G,cAICE,EAJD,gBAK2BA,EAAmBN,OAL9C,cAKCO,EALD,yBAMGA,GANH,4C,sBAQA,SAAeC,EAAtB,kC,4CAAO,WAAuCC,GAAvC,iBAAAZ,EAAA,sEACqBC,MAAM,sCAAD,OAAuCW,IADjE,cACCC,EADD,gBAEyBA,EAAYV,OAFrC,cAECW,EAFD,yBAGEA,GAHF,4C,kCCTA,SAASC,IACd,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAGlC,SAASC,EAAaC,GAC3B,IAAMC,EAAYP,IAElB,GADcO,EAAUC,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAOJ,EAAQI,MAChD,CACT,IAAMC,EAAeJ,EAAUK,MAAK,SAACH,GAAD,OAAUA,EAAKC,KAAOJ,EAAQI,MAC9DC,EAAaE,mBAAqBF,EAAaG,QACjDH,EAAaG,OAAS,GAExBX,aAAaY,QAAQ,OAAQd,KAAKe,UAAUT,QACvC,CACLD,EAAQQ,MAAQ,EAChB,IAAMG,EAAK,sBAAOV,GAAP,CAAkBD,IAC7BH,aAAaY,QAAQ,OAAQd,KAAKe,UAAUC,KAIzC,SAASC,EAAeZ,EAASa,GACtC,IAAMZ,EAAYP,IACZoB,EAAWb,EAAUK,MAAK,SAACH,GAAD,OAAUA,EAAKC,KAAOJ,EAAQI,MAC9D,IAAKS,GAAaC,EAASN,MAAQ,EACjCM,EAASN,OAAS,EAClBX,aAAaY,QAAQ,OAAQd,KAAKe,UAAUT,QACvC,CACL,IAAMc,EAAUd,EAAUe,QAAO,SAACb,GAAD,OAAUA,EAAKC,KAAOJ,EAAQI,MAC/DP,aAAaY,QAAQ,OAAQd,KAAKe,UAAUK,KAhC3CpB,KAAKC,MAAMC,aAAaC,QAAQ,UACnCD,aAAaY,QAAQ,OAAQd,KAAKe,UAAU,K,ICD1CO,EAASC,EAAUC,ECIFC,E,4MACnBC,WAAa,WAEXtB,EADoB,EAAKuB,MAAjBtB,U,4CAIV,WAAU,IAAD,OACP,EAA2CuB,KAAKD,MAAxC/B,EAAR,EAAQA,UAAWiC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,WAE5B,OACE,6BACE,4BACEC,KAAK,SACLC,cAAcF,EACdG,MAAQrC,EACRsC,QAAU,WAAQ,EAAKR,aAAcG,MAJvC,8B,GAXkCM,aCoE3BC,E,kDA9Db,aAAe,IAAD,8BACZ,gBAUFC,SAXc,sBAWH,kCAAArD,EAAA,+DACmB,EAAK2C,MAAzBpC,EADC,EACDA,MAAO+C,EADN,EACMA,SADN,SAEcjD,EAAgCiD,EAAU/C,GAFxD,OAEHgD,EAFG,OAGT,EAAKC,SAAS,CACZC,QAASF,EAASE,UAJX,2CATT,EAAKC,MAAQ,CACXD,QAAS,IAHC,E,qDAOd,WACEb,KAAKS,a,oBAWP,WACE,IAAQI,EAAYb,KAAKc,MAAjBD,QACR,EAAwCb,KAAKD,MAArCgB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,WACzB,OACE,6BACGJ,EAAQK,KAAI,SAACtC,GAAD,OACX,6BAASuC,IAAMvC,EAAKC,IAClB,kBAAC,IAAD,CACEuC,GAAE,2BAAuBxC,EAAKC,IAC9BuB,cAAY,uBAEZ,yBAAKA,cAAY,WACf,yBAAKiB,IAAMzC,EAAK0C,UAAYC,IAAM3C,EAAK4C,QACvC,2BAAK5C,EAAK4C,OACV,2BAAK5C,EAAK6C,OACT7C,EAAK8C,SAASC,eACZ,uBAAGvB,cAAY,iBAAf,qBAGP,kBAAC,EAAD,CACEpC,UAAYY,EAAKC,GACjBJ,QAAUG,EACVgD,UAAYpD,EACZuC,MAAQA,EACRC,SAAWA,EACXf,QAAUgB,EACVf,WAAW,iC,GA9CGK,aFPxBsB,EAAY,CAAC,SAAU,SAE3B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAIf,KAAOkB,EAAcN,OAAOO,UAAUC,eAAeC,KAAKH,EAAQlB,KAAQc,EAAOd,GAAOkB,EAAOlB,IAAY,OAAOc,IAA2BQ,MAAMzC,KAAMmC,WAEhT,SAASO,EAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkElB,EAAKe,EAAnED,EAEzF,SAAuCI,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DlB,EAAKe,EAA5DD,EAAS,GAAQW,EAAab,OAAOc,KAAKR,GAAqB,IAAKH,EAAI,EAAGA,EAAIU,EAAWR,OAAQF,IAAOf,EAAMyB,EAAWV,GAAQS,EAASG,QAAQ3B,IAAQ,IAAac,EAAOd,GAAOkB,EAAOlB,IAAQ,OAAOc,EAFxMc,CAA8BV,EAAQM,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAOf,EAAM8B,EAAiBf,GAAQS,EAASG,QAAQ3B,IAAQ,GAAkBY,OAAOO,UAAUY,qBAAqBV,KAAKH,EAAQlB,KAAgBc,EAAOd,GAAOkB,EAAOlB,IAAU,OAAOc,EAMne,IAAI,EAAkB,SAAyBkB,GAC7C,IAAIC,EAASD,EAAKC,OACd5B,EAAQ2B,EAAK3B,MACbzB,EAAQ2C,EAAyBS,EAAMtB,GAE3C,OAAoB,IAAMwB,cAAc,MAAOvB,EAAS,CACtDwB,QAAS,YACTC,KAAM,OACNC,OAAQ,eACRC,YAAa,EACbC,cAAe,QACfC,eAAgB,QAChBC,UAAW,gCACXC,IAAKT,GACJrD,GAAQyB,EAAqB,IAAM6B,cAAc,QAAS,KAAM7B,GAAS,KAAM9B,IAAYA,EAAuB,IAAM2D,cAAc,SAAU,CACjJS,GAAI,EACJC,GAAI,GACJC,EAAG,KACArE,IAAaA,EAAwB,IAAM0D,cAAc,SAAU,CACtES,GAAI,GACJC,GAAI,GACJC,EAAG,KACApE,IAAUA,EAAqB,IAAMyD,cAAc,OAAQ,CAC9DY,EAAG,uEAIHC,EAA0B,IAAMC,YAAW,SAAUpE,EAAO8D,GAC9D,OAAoB,IAAMR,cAAc,EAAiBvB,EAAS,CAChEsB,OAAQS,GACP9D,OGrCgBqE,GHuCN,I,4JGtCb,WACE,MAA4BpE,KAAKD,MAAzBiB,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,MAClB,OACE,kBAAC,IAAD,CAAMK,GAAG,QAAQhB,cAAY,wBAC3B,kBAAC,EAAD,CAAciE,MAAM,KAAK9C,IAAI,kBAC5BR,EACI,uBAAGX,cAAY,sBAAf,KAED,uBAAGA,cAAY,sBAEXY,Q,GAXsBT,cCCjB+D,E,kDACnB,aAAe,IAAD,8BACZ,gBAgBFrD,WAAa,WACX,IACMsD,EADYpG,IACaqG,QAAO,SAACC,EAAKC,GAAN,OAAeA,EAAKzF,MAAQwF,IAAK,GACvE,EAAK7D,SAAS,CACZI,SAAUuD,IACT,WACGA,EAAe,GACjB,EAAK3D,SAAS,CACZ+D,aAAa,QAzBP,EA+BdC,iBA/Bc,sBA+BK,4BAAAxH,EAAA,sEACWD,IADX,OACX0H,EADW,OAEjB,EAAKjE,SAAS,CAAEiE,kBAFC,2CA/BL,EAoCd/E,WAAa,WACX,EAAKc,SAAS,CACZkE,YAAY,KAtCF,EA0CdC,eAAiB,YAAiB,IAC1BC,EADyB,EAAb/C,OACI5B,MACtB,EAAKO,SAAS,CACZjD,MAAOqH,KA7CG,EAiDdC,qBAAuB,YAAiB,IAChCC,EAD+B,EAAbjD,OACQ5B,MAChC,EAAKO,SAAS,CACZF,SAAUwE,EACVJ,YAAY,KAnDd,EAAKhE,MAAQ,CACXnD,MAAO,GACP+C,SAAU,GACVoE,YAAY,EACZD,cAAe,GACf7D,SAAU,EACV2D,aAAa,GARH,E,qDAYd,WACE3E,KAAK4E,mBACL5E,KAAKiB,e,oBA2CP,WAAU,IAAD,OACP,EAKkBjB,KAAKc,MALfnD,EAAR,EAAQA,MACN+C,EADF,EACEA,SACAoE,EAFF,EAEEA,WACAD,EAHF,EAGEA,cACA7D,EAJF,EAIEA,SACA2D,EALF,EAKEA,YACF,OACE,6BACE,yBAAK9F,GAAG,QACN,kBAAC,EAAD,CAAUkC,MAAQ4D,EAAc3D,SAAWA,KAE7C,yBAAKZ,cAAY,wBACf,uFACA,8BACE,2BAAO+E,QAAQ,UACb,2BACEhF,KAAK,OACLC,cAAY,cACZgF,SAAWpF,KAAK+E,eAChBM,KAAK,YAGT,4BACElF,KAAK,SACLC,cAAY,eACZE,QAAUN,KAAKF,YAHjB,WASFgF,GAAc,kBAAC,EAAD,CACdnH,MAAQA,EACR+C,SAAWA,EACXK,MAAQ4D,EACR3D,SAAWA,EACXC,WAAajB,KAAKiB,aAEpB,4BAEI4D,EAAc3D,KAAI,gBAAGmE,EAAH,EAAGA,KAAMxG,EAAT,EAASA,GAAT,OAChB,wBAAIsC,IAAMtC,GACR,2BAAOuB,cAAY,WAAW+E,QAAUtG,GACtC,2BACEA,GAAKA,EACLsB,KAAK,QACLkF,KAAK,WACLhF,MAAQxB,EACRuG,SAAW,EAAKH,uBAEhBI,a,GA7Gc9E,aCHb+E,E,4JACnB,WACE,OACE,kBAAC,IAAD,CAAMlE,GAAG,cACP,4BAAQjB,KAAK,SAASC,cAAY,qBAChC,qD,GALqCG,aCE1BgF,E,4MACnBzE,MAAQ,CACN0E,KAAM,GACNb,aAAa,G,EAOf1D,WAAa,WACX,IAAMwE,EAAYtH,IAClB,EAAKyC,SAAS,CACZ4E,KAAMC,IACL,WACGA,EAAUrD,OAAS,GACrB,EAAKxB,SAAS,CACZ+D,aAAa,Q,EAMrBe,eAAiB,SAACC,EAAW1G,GAAZ,OAAsB0G,GAAa1G,G,uDAjBpD,WACEe,KAAKiB,e,oBAkBP,WAAU,IAAD,OACP,EAA8BjB,KAAKc,MAA3B0E,EAAR,EAAQA,KAAMb,EAAd,EAAcA,YACd,OACE,oCACE,gCACE,kBAAC,EAAD,CAAcN,MAAM,OADtB,wBAGE,kBAAC,EAAD,OAEF,iCACGM,EACG,uBAAGvE,cAAY,+BAAf,8BACAoF,EAAKtE,KAAI,SAACtC,GAAD,OACT,yBAAKuC,IAAMvC,EAAKC,IACd,yBAAKwC,IAAMzC,EAAK0C,UAAYC,IAAM3C,EAAK4C,QACvC,wBAAIpB,cAAY,8BAA+BxB,EAAK4C,OACpD,uBAAGpB,cAAY,kCACXxB,EAAKK,OAET,4BACEmB,cAAY,4BACZD,KAAK,SACLE,MAAQzB,EAAKC,GACbyB,QAAU,WAAQjB,EAAeT,GAAM,GAAQ,EAAKqC,eAJtD,KAQA,4BACEb,cAAY,4BACZD,KAAK,SACLyF,SAAW,EAAKF,eAAe9G,EAAKI,mBAAoBJ,EAAKK,OAC7DoB,MAAQzB,EAAKC,GACbyB,QAAU,WAAQ9B,EAAaI,GAAO,EAAKqC,eAL7C,KASA,4BACEd,KAAK,SACLE,MAAQzB,EAAKC,GACbyB,QAAU,WAAQjB,EAAeT,GAAM,GAAO,EAAKqC,eAHrD,e,GA7DkBV,aCFbsF,E,4JACnB,WACE,MAA+C7F,KAAKD,MAA5C+F,EAAR,EAAQA,MAAOC,EAAf,EAAeA,mBAAoBC,EAAnC,EAAmCA,QAC7BC,EAAUlE,OAAOkE,QAAQF,GAAoBhH,MAAK,SAACH,GAAD,OAAUA,EAAK,MACvE,OACE,6BACE,iCACE,8BAAQkH,GACR,8BAAQG,EAAUA,EAAQ,GAAK,IAC/B,8BAAQD,S,GATsBzF,aCHjC,SAAS2F,EAAmBtH,GACjCN,aAAaY,QAAQ,aAAcd,KAAKe,UAAUP,IAG7C,SAASuH,IACd,OAAO/H,KAAKC,MAAMC,aAAaC,QAAQ,e,ICDpB6H,E,4MACnBtF,MAAQ,CACNgF,MAAO,GACPE,QAAS,GACTD,mBAAoB,CAClBM,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,GAELC,cAAe,I,EAGjBC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,IAAMC,EAAwB,CAC5BT,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,GAGL,EAAK7F,UAAS,YAA4D,IAAzD8F,EAAwD,EAAxDA,cACTK,EAAM,CAAEhB,mBADyD,EAAzCA,mBACID,MADqC,EAArBA,MACTE,QAD8B,EAAdA,SAGzD,OADAE,EAAmB,CAACa,GAAF,mBAAUL,KACrB,CACLA,cAAc,CAAEK,GAAH,mBAAWL,IACxBZ,MAAO,GACPE,QAAS,GACTD,mBAAoBe,O,EAK1BE,kBAAoB,YAA4B,IACxCjB,EAAqB,CACzBM,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,GAELV,EAR6C,EAAxB9D,OAAU5B,QAQH,EAC5B,EAAKO,SAAS,CAAEmF,wB,EAGlBkB,kBAAoB,WAClB,IAAMC,EAAWf,IACbe,GAAU,EAAKtG,SAAS,CAAE8F,cAAeQ,K,4CAG/C,WAAU,IAAD,OACP,EAA8DlH,KAAKc,MAA3DgF,EAAR,EAAQA,MAAOE,EAAf,EAAeA,QAASD,EAAxB,EAAwBA,mBAAoBW,EAA5C,EAA4CA,cAE5C,OACE,6BACE,gDACA,8BACE,2BACEtG,cAAY,uBACZD,KAAK,QACLgH,YAAY,QACZ/B,SAAW,gBAAGnD,EAAH,EAAGA,OAAH,OAAgB,EAAKrB,SAAS,CAAEkF,MAAO7D,EAAO5B,SACzDA,MAAQyF,IAER/D,OAAOc,KAAKkD,GAAoB7E,KAAI,SAACkG,GAAD,OAAa,2BACjDhH,cAAA,UAAiBgH,EAAjB,WACAjH,KAAK,QACLkF,KAAK,SACLgC,QAAUtB,EAAmBqB,GAC7B/G,MAAQ+G,EACRhC,SAAW,EAAK4B,kBAChB7F,IAAMiG,OAER,8BACED,YAAY,sBACZ/G,cAAY,4BACZgF,SAAW,gBAAGnD,EAAH,EAAGA,OAAH,OAAgB,EAAKrB,SAAS,CAAEoF,QAAS/D,EAAO5B,SAC3DA,MAAQ2F,IAEV,4BACE5F,cAAY,oBACZD,KAAK,SACLG,QAAUN,KAAK2G,mBAHjB,YAQF,6BACGD,EAAcxF,KAAI,SAACtC,GAAD,OAAW,kBAAC,EAAD,eAC5BuC,IAAMvC,EAAKkH,OACNlH,a,GA7F0B2B,aCItB+G,E,4MACnBxG,MAAQ,CACN7C,YAAa,GACb+C,SAAU,EACVD,OAAO,G,EAQTE,WAAa,WACX,IACMsD,EADYpG,IACaqG,QAAO,SAACC,EAAKC,GAAN,OAAeA,EAAKzF,MAAQwF,IAAK,GACvE,EAAK7D,SAAS,CACZI,SAAUuD,IACT,WACGA,EAAe,GACjB,EAAK3D,SAAS,CACZG,OAAO,Q,EAMfjB,W,sBAAa,4BAAA1C,EAAA,6DACHa,EAAgB,EAAK6C,MAArB7C,YADG,SAELO,EAAaP,GAFR,2C,EAKbwC,S,uCAAW,WAAOzC,GAAP,eAAAZ,EAAA,6DACT,EAAK6D,aADI,SAEiBlD,EAAwBC,GAFzC,OAEHC,EAFG,OAGT,EAAK2C,SAAS,CAAE3C,gBAHP,2C,6GAxBX,WACE,IAA2BD,EAAkBgC,KAAKD,MAA1CwH,MAASC,OAAUxJ,UAC3BgC,KAAKS,SAASzC,K,oBA4BhB,WAAU,IAAD,OACP,EAAyCgC,KAAKc,MAAtC7C,EAAR,EAAQA,YAAa8C,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,SAC5B,OACE,6BACE,yBAAKnC,GAAG,QACN,kBAAC,EAAD,CAAUkC,MAAQA,EAAQC,SAAWA,KAGtC/C,EAAYY,GAET,iCACE,yBAAKwC,IAAMpD,EAAYqD,UAAYC,IAAMtD,EAAYuD,QACrD,wBAAIpB,cAAY,uBAAwBnC,EAAYuD,OACpD,wCAAWvD,EAAYwD,QACvB,kBAAC,EAAD,CACEzD,UAAYC,EAAYY,GACxBJ,QAAUR,EACV2D,UAAYpD,EACZuC,MAAQA,EACRC,SAAWA,EACXf,QAAU,WAAQ,EAAKgB,cACvBf,WAAW,gCAGf,KAEJ,kBAAC,EAAD,W,GA/DoCK,aCLvBkH,E,4MACnB3G,MAAO,CACL0E,KAAM,I,EAORvE,WAAa,WACX,IAAMwE,EAAYtH,IAClB,EAAKyC,SAAS,CACZ4E,KAAMC,K,uDAPV,WACEzF,KAAKiB,e,oBAUP,WACE,IAAQuE,EAASxF,KAAKc,MAAd0E,KACR,OACE,6BACE,6BACIA,EAAKtE,KAAI,SAACtC,GAAD,OACT,yBAAKuC,IAAMvC,EAAKC,IACd,yBAAKwC,IAAMzC,EAAK0C,UAAYC,IAAM3C,EAAK4C,QACvC,wBAAIpB,cAAY,8BAA+BxB,EAAK4C,OACpD,uBAAGpB,cAAY,kCAAf,cAEIxB,EAAKK,YAKf,8BACE,2BACEmB,cAAY,oBACZD,KAAK,OACLgH,YAAY,SAEd,2BACE/G,cAAY,iBACZD,KAAK,QACLgH,YAAY,UAEd,2BACE/G,cAAY,eACZD,KAAK,OACLgH,YAAY,QAEd,2BACE/G,cAAY,iBACZD,KAAK,OACLgH,YAAY,aAEd,2BACE/G,cAAY,eACZD,KAAK,OACLgH,YAAY,QAEd,2BACE/G,cAAY,mBACZD,KAAK,OACLgH,YAAY,gBAEd,4BACE/G,cAAY,GACZD,KAAK,UAFP,0B,GA/D6BI,aCsBxBmH,E,4JAhBb,WACE,OACE,yBAAK9D,UAAU,OACb,kBAAC,IAAD,CAAe+D,SAAWC,iBACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYzD,IAClC,kBAAC,IAAD,CAAOwD,KAAK,QAAQC,UAAYxC,IAChC,kBAAC,IAAD,CAAOuC,KAAK,8BAA8BC,UAAYT,IACtD,kBAAC,IAAD,CAAOQ,KAAK,aAAaC,UAAYN,W,GAT/BO,IAAMzH,WCIJ0H,QACW,cAA7BC,OAAOC,SAASC,UAEkB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MAC1B,2DCZNc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1c74381a.chunk.js","sourcesContent":["export async function getCategories() {\n  const categories = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const categoriesJson = await categories.json();\n  return categoriesJson;\n}\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  if (!categoryId && !query) {\n    throw new Error('Insira pelo menos um elemento');\n  }\n  const fetchQueryCategory = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const queryCategoryJson = await fetchQueryCategory.json();\n  return (queryCategoryJson);\n}\nexport async function getDetailsFromProductId(productId) {\n  const productInfo = await fetch(`https://api.mercadolibre.com/items/${productId}`);\n  const productInfoJson = await productInfo.json();\n  return productInfoJson;\n}\n","if (!JSON.parse(localStorage.getItem('cart'))) {\n  localStorage.setItem('cart', JSON.stringify([]));\n}\n\nexport function getCartItems() {\n  return JSON.parse(localStorage.getItem('cart'));\n}\n\nexport function saveCartItem(itemObj) {\n  const atualCart = getCartItems();\n  const exist = atualCart.some((item) => item.id === itemObj.id);\n  if (exist) {\n    const addCountItem = atualCart.find((item) => item.id === itemObj.id);\n    if (addCountItem.available_quantity > addCountItem.count) {\n      addCountItem.count += 1;\n    }\n    localStorage.setItem('cart', JSON.stringify(atualCart));\n  } else {\n    itemObj.count = 1;\n    const final = [...atualCart, itemObj];\n    localStorage.setItem('cart', JSON.stringify(final));\n  }\n}\n\nexport function removeCartItem(itemObj, removeAll) {\n  const atualCart = getCartItems();\n  const itemCart = atualCart.find((item) => item.id === itemObj.id);\n  if (!removeAll && itemCart.count > 1) {\n    itemCart.count -= 1;\n    localStorage.setItem('cart', JSON.stringify(atualCart));\n  } else {\n    const newCart = atualCart.filter((item) => item.id !== itemObj.id);\n    localStorage.setItem('cart', JSON.stringify(newCart));\n  }\n}\n","var _circle, _circle2, _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgShoppingCart = function SvgShoppingCart(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-shopping-cart\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 9,\n    cy: 21,\n    r: 1\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 20,\n    cy: 21,\n    r: 1\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgShoppingCart, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ShoppingCart.2dba5428.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { saveCartItem } from '../services/LocalStorageCart';\n\nexport default class BtnAddToCart extends Component {\n  onBtnClick = () => {\n    const { itemObj } = this.props;\n    saveCartItem(itemObj);\n  }\n\n  render() {\n    const { productId, getCart, dataTestID } = this.props;\n\n    return (\n      <div>\n        <button\n          type=\"button\"\n          data-testid={ dataTestID }\n          value={ productId }\n          onClick={ () => { this.onBtnClick(); getCart(); } }\n        >\n          Adicionar ao carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nBtnAddToCart.propTypes = {\n  dataTestID: PropTypes.string.isRequired,\n  productId: PropTypes.string.isRequired,\n  getCart: PropTypes.func.isRequired,\n  itemObj: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  getProductsFromCategoryAndQuery,\n} from '../services/api';\nimport { saveCartItem } from '../services/LocalStorageCart';\nimport BtnAddToCart from './BtnAddToCart';\n\nclass SearchResults extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  fetchApi = async () => {\n    const { query, category } = this.props;\n    const response = await getProductsFromCategoryAndQuery(category, query);\n    this.setState({\n      results: response.results,\n    });\n  }\n\n  render() {\n    const { results } = this.state;\n    const { empty, quantity, updateCart } = this.props;\n    return (\n      <div>\n        {results.map((item) => (\n          <section key={ item.id }>\n            <Link\n              to={ `/product-details/${item.id}` }\n              data-testid=\"product-detail-link\"\n            >\n              <div data-testid=\"product\">\n                <img src={ item.thumbnail } alt={ item.title } />\n                <p>{ item.title }</p>\n                <p>{ item.price }</p>\n                {item.shipping.free_shipping\n                && <p data-testid=\"free-shipping\">Frete Grátis</p>}\n              </div>\n            </Link>\n            <BtnAddToCart\n              productId={ item.id }\n              itemObj={ item }\n              itemsCart={ saveCartItem }\n              empty={ empty }\n              quantity={ quantity }\n              getCart={ updateCart }\n              dataTestID=\"product-add-to-cart\"\n            />\n          </section>\n        ))}\n      </div>\n    );\n  }\n}\n\nSearchResults.propTypes = {\n  updateCart: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  empty: PropTypes.bool.isRequired,\n  quantity: PropTypes.number.isRequired,\n};\n\nexport default SearchResults;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ShoppingCart } from '../images/ShoppingCart.svg';\n\nexport default class CartIcon extends Component {\n  render() {\n    const { quantity, empty } = this.props;\n    return (\n      <Link to=\"/cart\" data-testid=\"shopping-cart-button\">\n        <ShoppingCart width=\"50\" alt=\"Shopping Cart\" />\n        {empty\n          ? (<p data-testid=\"shopping-cart-size\">0</p>)\n          : (\n            <p data-testid=\"shopping-cart-size\">\n              {\n                quantity\n              }\n\n            </p>)}\n      </Link>\n    );\n  }\n}\n\nCartIcon.propTypes = {\n  quantity: PropTypes.number.isRequired,\n  empty: PropTypes.bool.isRequired,\n}.isRequired;\n","import React, { Component } from 'react';\nimport SearchResults from '../components/SearchResults';\nimport { getCategories } from '../services/api';\nimport { getCartItems } from '../services/LocalStorageCart';\nimport CartIcon from '../components/CartIcon';\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      query: '',\n      category: '',\n      didRequest: false,\n      allCategories: [],\n      quantity: 0,\n      cartIsempty: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getAllCategories();\n    this.updateCart();\n  }\n\n  updateCart = () => {\n    const cartItems = getCartItems();\n    const cartQuantity = cartItems.reduce((acc, curr) => curr.count + acc, 0);\n    this.setState({\n      quantity: cartQuantity,\n    }, () => {\n      if (cartQuantity > 0) {\n        this.setState({\n          cartIsempty: false,\n        });\n      }\n    });\n  }\n\n  getAllCategories = async () => {\n    const allCategories = await getCategories();\n    this.setState({ allCategories });\n  }\n\n  onBtnClick = () => {\n    this.setState({\n      didRequest: true,\n    });\n  }\n\n  onSearchChange = ({ target }) => {\n    const search = target.value;\n    this.setState({\n      query: search,\n    });\n  }\n\n  handleChangeCategory = ({ target }) => {\n    const selectedCategory = target.value;\n    this.setState({\n      category: selectedCategory,\n      didRequest: true,\n    });\n  }\n\n  render() {\n    const { query,\n      category,\n      didRequest,\n      allCategories,\n      quantity,\n      cartIsempty } = this.state;\n    return (\n      <div>\n        <div id=\"cart\">\n          <CartIcon empty={ cartIsempty } quantity={ quantity } />\n        </div>\n        <div data-testid=\"home-initial-message\">\n          <p>Digite algum termo de pesquisa ou escolha uma categoria.</p>\n          <form>\n            <label htmlFor=\"search\">\n              <input\n                type=\"text\"\n                data-testid=\"query-input\"\n                onChange={ this.onSearchChange }\n                name=\"search\"\n              />\n            </label>\n            <button\n              type=\"button\"\n              data-testid=\"query-button\"\n              onClick={ this.onBtnClick }\n            >\n              Busca\n            </button>\n          </form>\n        </div>\n        { didRequest && <SearchResults\n          query={ query }\n          category={ category }\n          empty={ cartIsempty }\n          quantity={ quantity }\n          updateCart={ this.updateCart }\n        />}\n        <ul>\n          {\n            allCategories.map(({ name, id }) => (\n              <li key={ id }>\n                <label data-testid=\"category\" htmlFor={ id }>\n                  <input\n                    id={ id }\n                    type=\"radio\"\n                    name=\"category\"\n                    value={ id }\n                    onChange={ this.handleChangeCategory }\n                  />\n                  { name }\n                </label>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class EndPurchaseButton extends Component {\n  render() {\n    return (\n      <Link to=\"/finalPage\">\n        <button type=\"button\" data-testid=\"checkout-products\">\n          <p>Finalizar Compra</p>\n        </button>\n      </Link>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { ReactComponent as ShoppingCart } from '../images/ShoppingCart.svg';\nimport { getCartItems, removeCartItem, saveCartItem } from '../services/LocalStorageCart';\nimport EndPurchaseButton from '../components/EndPurchaseButton';\n\nexport default class Cart extends Component {\n  state = {\n    cart: [],\n    cartIsempty: true,\n  }\n\n  componentDidMount() {\n    this.updateCart();\n  }\n\n  updateCart = () => {\n    const cartItems = getCartItems();\n    this.setState({\n      cart: cartItems,\n    }, () => {\n      if (cartItems.length > 0) {\n        this.setState({\n          cartIsempty: false,\n        });\n      }\n    });\n  }\n\n  verifyQuantity = (available, count) => available <= count\n\n  render() {\n    const { cart, cartIsempty } = this.state;\n    return (\n      <>\n        <header>\n          <ShoppingCart width=\"50\" />\n          - Carrinho de compras\n          <EndPurchaseButton />\n        </header>\n        <section>\n          {cartIsempty\n            ? <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n            : cart.map((item) => (\n              <div key={ item.id }>\n                <img src={ item.thumbnail } alt={ item.title } />\n                <h3 data-testid=\"shopping-cart-product-name\">{ item.title }</h3>\n                <p data-testid=\"shopping-cart-product-quantity\">\n                  { item.count }\n                </p>\n                <button\n                  data-testid=\"product-decrease-quantity\"\n                  type=\"button\"\n                  value={ item.id }\n                  onClick={ () => { removeCartItem(item, false); this.updateCart(); } }\n                >\n                  -\n                </button>\n                <button\n                  data-testid=\"product-increase-quantity\"\n                  type=\"button\"\n                  disabled={ this.verifyQuantity(item.available_quantity, item.count) }\n                  value={ item.id }\n                  onClick={ () => { saveCartItem(item); this.updateCart(); } }\n                >\n                  +\n                </button>\n                <button\n                  type=\"button\"\n                  value={ item.id }\n                  onClick={ () => { removeCartItem(item, true); this.updateCart(); } }\n                >\n                  X\n                </button>\n              </div>\n            )) }\n        </section>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Evaluation extends Component {\n  render() {\n    const { email, checkedRadioButton, comment } = this.props;\n    const entries = Object.entries(checkedRadioButton).find((item) => item[1]);\n    return (\n      <div>\n        <section>\n          <span>{ email }</span>\n          <span>{ entries ? entries[0] : ''}</span>\n          <span>{ comment }</span>\n        </section>\n      </div>\n    );\n  }\n}\n\nEvaluation.propTypes = {\n  email: PropTypes.string.isRequired,\n  comment: PropTypes.string.isRequired,\n  checkedRadioButton: PropTypes.objectOf(PropTypes.bool).isRequired,\n};\n","export function saveInLocalStorage(item) {\n  localStorage.setItem('evaluation', JSON.stringify(item));\n}\n\nexport function getFromLocalStorage() {\n  return JSON.parse(localStorage.getItem('evaluation'));\n}\n","import React, { Component } from 'react';\nimport Evaluation from './Evaluation';\nimport { saveInLocalStorage, getFromLocalStorage } from '../services/SaveInLocalStorage';\n\nexport default class RatingProduct extends Component {\n  state = {\n    email: '',\n    comment: '',\n    checkedRadioButton: {\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n    },\n    commentsArray: [],\n  }\n\n  ratingButtonClick = (event) => {\n    event.preventDefault();\n    const newCheckedRadioButton = {\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n    };\n\n    this.setState(({ commentsArray, checkedRadioButton, email, comment }) => {\n      const obj = { checkedRadioButton, email, comment };\n      saveInLocalStorage([obj, ...commentsArray]);\n      return {\n        commentsArray: [obj, ...commentsArray],\n        email: '',\n        comment: '',\n        checkedRadioButton: newCheckedRadioButton,\n      };\n    });\n  }\n\n  selectRadioButton = ({ target: { value } }) => {\n    const checkedRadioButton = {\n      1: false,\n      2: false,\n      3: false,\n      4: false,\n      5: false,\n    };\n    checkedRadioButton[value] = true;\n    this.setState({ checkedRadioButton });\n  }\n\n  componentDidMount = () => {\n    const getItems = getFromLocalStorage();\n    if (getItems) this.setState({ commentsArray: getItems });\n  }\n\n  render() {\n    const { email, comment, checkedRadioButton, commentsArray } = this.state;\n\n    return (\n      <div>\n        <h2>Avaliações</h2>\n        <form>\n          <input\n            data-testid=\"product-detail-email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={ ({ target }) => this.setState({ email: target.value }) }\n            value={ email }\n          />\n          { Object.keys(checkedRadioButton).map((number) => (<input\n            data-testid={ `${number}-rating` }\n            type=\"radio\"\n            name=\"rating\"\n            checked={ checkedRadioButton[number] }\n            value={ number }\n            onChange={ this.selectRadioButton }\n            key={ number }\n          />)) }\n          <textarea\n            placeholder=\"Mensagem (Opcional)\"\n            data-testid=\"product-detail-evaluation\"\n            onChange={ ({ target }) => this.setState({ comment: target.value }) }\n            value={ comment }\n          />\n          <button\n            data-testid=\"submit-review-btn\"\n            type=\"submit\"\n            onClick={ this.ratingButtonClick }\n          >\n            Avaliar\n          </button>\n        </form>\n        <div>\n          {commentsArray.map((item) => (<Evaluation\n            key={ item.email }\n            { ...item }\n          />))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CartIcon from '../components/CartIcon';\nimport { getDetailsFromProductId } from '../services/api';\nimport { getCartItems, saveCartItem } from '../services/LocalStorageCart';\nimport RatingProduct from '../components/RatingProduct';\nimport BtnAddToCart from '../components/BtnAddToCart';\n\nexport default class ProductDetails extends Component {\n  state = {\n    productInfo: {},\n    quantity: 0,\n    empty: true,\n  };\n\n  componentDidMount() {\n    const { match: { params: { productId } } } = this.props;\n    this.fetchApi(productId);\n  }\n\n  updateCart = () => {\n    const cartItems = getCartItems();\n    const cartQuantity = cartItems.reduce((acc, curr) => curr.count + acc, 0);\n    this.setState({\n      quantity: cartQuantity,\n    }, () => {\n      if (cartQuantity > 0) {\n        this.setState({\n          empty: false,\n        });\n      }\n    });\n  }\n\n  onBtnClick = async () => {\n    const { productInfo } = this.state;\n    await saveCartItem(productInfo);\n  }\n\n  fetchApi = async (productId) => {\n    this.updateCart();\n    const productInfo = await getDetailsFromProductId(productId);\n    this.setState({ productInfo });\n  }\n\n  render() {\n    const { productInfo, empty, quantity } = this.state;\n    return (\n      <div>\n        <div id=\"cart\">\n          <CartIcon empty={ empty } quantity={ quantity } />\n        </div>\n        {/* Apenas renderiza as informações do produto quando termina o fetch na API */}\n        {productInfo.id\n          ? (\n            <section>\n              <img src={ productInfo.thumbnail } alt={ productInfo.title } />\n              <h3 data-testid=\"product-detail-name\">{ productInfo.title }</h3>\n              <p>{ `R$ ${productInfo.price}` }</p>\n              <BtnAddToCart\n                productId={ productInfo.id }\n                itemObj={ productInfo }\n                itemsCart={ saveCartItem }\n                empty={ empty }\n                quantity={ quantity }\n                getCart={ () => { this.updateCart(); } }\n                dataTestID=\"product-detail-add-to-cart\"\n              />\n            </section>)\n          : null}\n\n        <RatingProduct />\n      </div>\n    );\n  }\n}\nProductDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      productId: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport { getCartItems } from '../services/LocalStorageCart';\n\nexport default class FinalPage extends Component {\n  state ={\n    cart: [],\n  }\n\n  componentDidMount() {\n    this.updateCart();\n  }\n\n  updateCart = () => {\n    const cartItems = getCartItems();\n    this.setState({\n      cart: cartItems,\n    });\n  }\n\n  render() {\n    const { cart } = this.state;\n    return (\n      <div>\n        <div>\n          { cart.map((item) => (\n            <div key={ item.id }>\n              <img src={ item.thumbnail } alt={ item.title } />\n              <h3 data-testid=\"shopping-cart-product-name\">{ item.title }</h3>\n              <p data-testid=\"shopping-cart-product-quantity\">\n                Quantidade:\n                { item.count }\n              </p>\n            </div>\n          ))}\n        </div>\n        <form>\n          <input\n            data-testid=\"checkout-fullname\"\n            type=\"text\"\n            placeholder=\"Nome\"\n          />\n          <input\n            data-testid=\"checkout-email\"\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <input\n            data-testid=\"checkout-cpf\"\n            type=\"text\"\n            placeholder=\"CPF\"\n          />\n          <input\n            data-testid=\"checkout-phone\"\n            type=\"text\"\n            placeholder=\"Telefone\"\n          />\n          <input\n            data-testid=\"checkout-cep\"\n            type=\"text\"\n            placeholder=\"CEP\"\n          />\n          <input\n            data-testid=\"checkout-address\"\n            type=\"text\"\n            placeholder=\"Endereço\"\n          />\n          <button\n            data-testid=\"\"\n            type=\"button\"\n          >\n            Finalizar Compra\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\nimport ProductDetails from './pages/ProductDetails';\nimport FinalPage from './pages/FinalPage';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename={ process.env.PUBLIC_URL }>\n          <Switch>\n            <Route exact path=\"/\" component={ Home } />\n            <Route path=\"/cart\" component={ Cart } />\n            <Route path=\"/product-details/:productId\" component={ ProductDetails } />\n            <Route path=\"/finalpage\" component={ FinalPage } />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}